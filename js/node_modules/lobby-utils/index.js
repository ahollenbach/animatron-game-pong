// Follows class definition structure from the following StackOverflow post:
// http://stackoverflow.com/questions/1114024/constructors-in-javascript-objects
var Client = (function() {
	// Constructor
	var c = function(username, connection, data) {
		this.username = username;
		this.connection = connection;
		this.data = data;
	}

	return c;
})();

var ClientList = (function() {
	// Constructor
	var c = function() {
		var clients = {};
		var numberOfClients = 0;

		this.size = function() { return numberOfClients; };
	};

	c.prototype = {
		pushClient : function(username, connection, data) {
			this.clients[username] = new Client(username, connection, data);
			this.numberOfClients++;
		},

		removeClient : function(username) {
			delete clients[username];
			this.numberOfClients--;
		},

		getConnection : function(username) {
			return this.clients.hasOwnProperty(username) ? this.clients[username] : null;
		},

		getDataByName : function(username, dataName) {
			return this.clients.hasOwnProperty(username) && 
				this.clients[username].hasOwnProperty(dataName) ?
					this.clients[username].data[dataName] : null;
		},

		addData : function(username, data) {
			for (var attribute in data)
				this.clients[username][attribute] = data[attribute];
		}

		forEach : function(code) {
			for (var username in this.clients)
				code.call(username);
		}
	};

	return c;
})();

var GameSession = (function() {
	var nextID = 0;

	// Constructor
	var c = function(type, players) {
		this.type = type;
		this.players = players;

		this.id = nextID++;
		this.confirmations = {};

		for (var i = 0; i < this.players.length; i++)
			this.confirmations[this.players[i]] = false;
	};

	c.prototype = {
		// Returns true if all players have confirmed
		allConfirmed : function() {
			var confirmationStatus = true;

			for (var i = 0; confirmationStatus && i < this.players.length; i++)
				confirmationStatus = this.confirmations[this.players[i]];

			return confirmationStatus;
		}
	};

	return c;
})();

var GameSessionList = (function() {
	// Constructor
	var c = function() {
		var gameSessions = {};
		var numberOfGames = 0;

		this.size() = function() { return numberOfGames; };
	};

	c.prototype = {
		addGameSession : function(type, players) {
			var session = new GameSession(type, players);
			this.gameSessions[session.id] = session;

			return session.id;
		},

		removeGameSession : function(id) {
			delete this.gameSessions[id];
		},

		getConfirmationStatus : function(id) {
			return this.gameSessions[id].allConfirmed();
		},

		addConfirmation : function(id, player) {
			this.gameSessions[id][player] = true;
		},

		getGameSessionsByType : function(type) {
			var sessionsOfType = [];

			for (var gameSession in this.gameSessions)
				if (gameSession.type == type)
					sessionsOfType.push(gameSession);

			return gameSession;
		},

		getGameSessionPlayers : function(id) {
			return this.gameSessions[id].players;
		}
	};

	return c;
})();

// module.exports = Client;
module.exports = ClientList;
module.exports = GameSessionList;