/**
 * Pong Module
 * Brian Clanton
 *
 * This module contains functionality for handling messages from pong games. 
 */
const MessageTypes = {
		PADDLE_LOCATION : "paddle_location"
};

exports.MessageTypes = MessageTypes;

exports.player1 = null;
exports.player2 = null;

exports.init = function(player1, player2) {
	this.player1 = player1;
	this.player2 = player2;

	this.player1.send(JSON.stringify({
		type : "game_initialization",
		data : {
			id : 1
		}
	}));

	this.player2.send(JSON.stringify({
		type : "game_initialization",
		data : {
			id : 2
		}
	}));
};

exports.handleMessage = function(message) {
	 // Verify that message is JSON
    try {
        var json = JSON.parse(message);
    } catch (e) {
        console.log('This doesn\'t look like a valid JSON: ', message);
        return;
    }

    switch (json.type) {
    	case MessageTypes.PADDLE_LOCATION:
    		var message = JSON.stringify({
				type : "paddle_location",
				data : {
					location : json.data.location
				}
			});

    		if (json.data.playerID == 1)
    			player1.send(message)
    		else
    			player2.send(message);
    		break;
    }
};